#!/bin/bash

# Executes a command repeatedly and sometimes prints a random cheat code until
# the command returns 0, in which case it prints the KONAMI code followed by the
# result of the command.

### USAGE ######################################################################
read -r -d '' USAGE <<EOF
Executes a command repeatedly and sometimes prints a random cheat code until the
command returns 0, in which case the KONAMI CODE is printed followed by the
command's output.

USAGE

  $(basename "$0") [OPTION...] COMMAND ARG...

OPTIONS

  -h    Show this help and exit.

  -d DELAY
        Execute the command with the specified DELAY. Time units suffixes as
        specified by \`sleep\` can be used.

  -e COUNT
        Prints a cheat code every COUNT command executions.
EOF
################################################################################

BTNS=(↑ ↓ ← → A B)
KONAMI='↑ ↑ ↓ ↓ ← → ← → B A'


# Output a single random button
rb() {
  echo ${BTNS[RANDOM % ${#BTNS[@]}]}
}

# Try to output the KONAMI code, but never succeed
not_konami() {
  local try="$KONAMI"
  until [ "$try" != "$KONAMI" ]; do
    try="$(rb) $(rb) $(rb) $(rb) $(rb) $(rb) $(rb) $(rb) $(rb) $(rb)"
  done

  echo "$try"
}


DELAY=1s  # Delay between command executions
EVERY=5   # Number of command executions before printing a cheat code

while getopts 'hd:e:' opt; do
  case "$opt" in
    h) echo "$USAGE" ; exit 0 ;;
    d) DELAY="$OPTARG" ;;
    e) EVERY="$OPTARG" ;;
    \?) exit 1 ;;
  esac
done
shift $((OPTIND-1))

while ! ((stop)); do
  if out="$(eval "$@")"; then
    echo "$KONAMI"
    [ -n "$out" ] && echo "$out"
    stop=1
  else
    sleep "$DELAY"
    if ! (( (iter + 1) % EVERY )); then
      not_konami
    fi
    ((iter++))
  fi
done
