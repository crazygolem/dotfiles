#!/bin/sh

# As of kitty 0.36.3, `kitten @ ls` reports an incorrect self window for scripts
# launched in the background, e.g. with `remote_control_script`: the window is
# always id:1 if it exists, and otherwise no window is self.
# Use `launch --type background --allow-remote-control` (it doesn't work with
# `remote_control_script`) with the special argument `@active-kitty-window-id`.
self="${1:?}"

# Returns the list of visible windows as a match string.
# Does not include the self window (which would become the overlay_parent after
# the broadcast is launched).
tops() {
    kitten @ ls \
    | jq -r --argjson self "$self" '
        [ .[] | select(.is_focused)
        | .tabs[] | select(.is_focused)
        #| ([ .windows[] | select(.is_self) | .id ]
        #  | if length != 1 then error end | .[0]
        #  ) as $self
        | .groups[]
        | select(.windows | any(. == $self) | not)
        | .windows[-1]
        | "id:" + (. | tostring)
        ] | join(" or ")
        ' \
    || exit
}

# Returns the top window in the self group.
selftop() {
    kitten @ ls \
    | jq -r --argjson self "$self" '
        .[] | select(.is_focused)
        | .tabs[] | select(.is_focused)
        #| ([ .windows[].id ]
        #  | if length != 1 then error end | .[0]
        #  ) as $self
        | .groups[]
        | select(.windows | any(. == $self))
        | .windows[-1]
        | "id:" + (. | tostring)
        ' \
    || exit
}

# Starting the broadcast again when in the broadcast window should not launch a
# new broadcast on top of the existing one, but instead replace it. The effect
# is that the broadcast continues, but the list of target windows is refreshed
# to include windows that were opened since the last broadcast launch.
kitten @ send-key \
    --match "state:parent_focused and var:broadcast_to and $(selftop)" \
    ctrl+esc

targets="state:parent_focused and not var:broadcast_to and ($(tops))"
kitten @ launch --no-response --type overlay --allow-remote-control \
    --var broadcast_to="$targets" \
    --watcher ./broadcast_settheme.py \
    kitty +kitten broadcast --match "$targets"
